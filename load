#!/usr/bin/env ruby

require 'yaml'
require 'dbus'

$data = YAML.load(File.read(ARGV[0]))
$xfconf = DBus.session_bus['org.xfce.Xfconf']['/org/xfce/Xfconf']['org.xfce.Xfconf']

def set(channel, key, value, base: nil)
  key = base + '/' + key if base
  puts "#{channel}:#{key} = #{value}"
  $xfconf.SetProperty(channel, key, value)
end

def set_each(channel, list, base: nil)
  return unless list
  list.each do |key,value|
    set(channel, key, value, base: base)
  end
end

# General settings
if settings = $data['settings']
  settings.each do |channel,list|
    set_each(channel, list)
  end
end

if shortcuts = $data['shortcuts']

  # Command keyboard shortcuts
  set_each('xfce4-keyboard-shortcuts', shortcuts['commands'], base: '/commands/custom')

  # WM keyboard shortcuts
  actions = shortcuts['wm'] || {}
  list = actions.invert.map { |k, v| [ '/xfwm4/custom/' + k, v + '_key' ] }.to_h
  set_each('xfce4-keyboard-shortcuts', list)

end

# Panels
if panels = $data['panels']
  $xfconf.ResetProperty('xfce4-panel', '/panels', true)
  $xfconf.ResetProperty('xfce4-panel', '/plugins', true)

  panels.each_with_index do |panel,panel_id|
    plugins = panel.delete('plugins')
    plugins.each_with_index do |(name,params),plugin_id|
      plugin_base = "/plugins/plugin-#{plugin_id + 1}"
      set('xfce4-panel', plugin_base, name)
      set_each('xfce4-panel', params, base: plugin_base)
    end

    panel['plugin-ids'] = (1..plugins.length).to_a
    set_each('xfce4-panel', panel, base: "/panels/panel-#{panel_id + 1}")
  end

  set('xfce4-panel', '/panels', (1..panels.length).to_a)

  system('xfce4-panel', '--restart')
end
