#!/usr/bin/env ruby

require 'yaml'

begin
  require 'dbus'
rescue LoadError
  $stderr.puts 'ruby-dbus needs to be installed'
  exit 1
end

if !ARGV[0]
  puts "usage: #{$0} config.yml"
  exit 1
end

YAML.add_domain_type('xfconf', 'uint') do |_, v|
  DBus.variant('u', v)
end

$data = YAML.load(File.read(ARGV[0]))
$xfconf = DBus.session_bus['org.xfce.Xfconf']['/org/xfce/Xfconf']['org.xfce.Xfconf']

def set(channel, key, value, base: nil)
  key = base + '/' + key if base
  if not value.nil?
    puts "#{channel}:#{key} = #{value}"
    $xfconf.SetProperty(channel, key, value)
  else
    puts "del #{channel}:#{key}"
    $xfconf.ResetProperty(channel, key, false)
  end
end

def set_each(channel, list, base: nil)
  return unless list
  list.each do |key,value|
    set(channel, key, value, base: base)
  end
end

if shortcuts = $data['shortcuts']

  # Command keyboard shortcuts
  set_each('xfce4-keyboard-shortcuts', shortcuts['commands'], base: '/commands/custom')

  # WM keyboard shortcuts
  actions = shortcuts['wm'] || {}
  list = actions.invert.map { |k, v| [ '/xfwm4/custom/' + k, v + '_key' ] }.to_h

  current = $xfconf.GetAllProperties('xfce4-keyboard-shortcuts', '/xfwm4/custom')
  clear = current.filter_map { |k,v| list.has_value?(v) && [k, nil] }.to_h
  list.merge!(clear) { |_,cur,_| cur }

  set_each('xfce4-keyboard-shortcuts', list)

end

# Panels
if panels = $data['panels']
  $xfconf.ResetProperty('xfce4-panel', '/panels', true)
  $xfconf.ResetProperty('xfce4-panel', '/plugins', true)

  panels.each_with_index do |panel,panel_id|
    plugins = panel.delete('plugins')
    plugins.each_with_index do |(name,params),plugin_id|
      plugin_base = "/plugins/plugin-#{plugin_id + 1}"
      set('xfce4-panel', plugin_base, name)
      set_each('xfce4-panel', params, base: plugin_base)
    end

    panel['plugin-ids'] = (1..plugins.length).to_a
    set_each('xfce4-panel', panel, base: "/panels/panel-#{panel_id + 1}")
  end

  set('xfce4-panel', '/panels', (1..panels.length).to_a)

  system('xfce4-panel', '--restart')
end

# General settings
if settings = $data['settings']
  settings.each do |channel,list|
    set_each(channel, list)
  end
end
